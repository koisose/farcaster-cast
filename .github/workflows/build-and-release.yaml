name: Build and release
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Electron build and release
      uses: actions/setup-node@v3
      with:
        node-version: '21'

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Build project
      run: npm run build
      env:
        NEXT_PUBLIC_PRIVY_APP_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_APP_ID }}
    - name: Package
      run: npm run package
      
    - name: Archive build files
      if: runner.os == 'Linux'
      run: zip -r build-linux.zip ./dist

    - name: Archive build files
      if: runner.os == 'Windows'
      run: Compress-Archive -Path .\dist\* -DestinationPath build-windows.zip

    - name: Archive build files
      if: runner.os == 'macOS'
      run: zip -r build-macos.zip ./dist

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}
        path: build-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-ubuntu-latest
        path: ./builds

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-windows-latest
        path: ./builds

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-macos-latest
        path: ./builds
    - name: Generate random tag name
      id: generate_tag
      run: |
        TAG_NAME=$(date +'%Y%m%d%H%M%S')-$(openssl rand -hex 3)
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.TAG_NAME }}
        body: |
          Release notes for ${{ env.TAG_NAME }}
        files: ./builds/build-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}